// Code generated by "go test -run=Generate -write=all"; DO NOT EDIT.
// Source: ../../cmd/compile/internal/types2/alias.go

// Copyright 2023 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package types

// Aliasはエイリアス型を表します。
//
// エイリアス型は次のようなエイリアス宣言によって作成されます：
//
//	type A = int
//
// 宣言の右辺の型は [Alias.Rhs] を使用してアクセスできます。
// この型自体もエイリアスである可能性があります。
// エイリアス型宣言のチェーンで最初の非エイリアス型を取得するには、
// [Unalias]を呼び出してください。
//
// 定義された（[Named]）型と同様に、エイリアス型には名前があります。
// その[TypeName]オブジェクトにアクセスするには [Alias.Obj] メソッドを使用してください。
//
// 歴史的に、Alias型は実体化されていませんでした。そのため、上記の例では、
// Aの型は [Alias.Rhs] がintであるAliasではなく、Basic（int）によって表現されていました。
// しかし、Go 1.24では型パラメータや引数を持つエイリアス型を宣言できるようになりました：
//
//	type Set[K comparable] = map[K]bool
//	s := make(Set[String])
//
// これによりAlias型を実体化する必要があります。それらにアクセスするには
// [Alias.TypeParams] と [Alias.TypeArgs] メソッドを使用してください。
//
// 移行を容易にするため、Alias型はgo1.22で導入されましたが、
// GODEBUG=gotypesalias=1環境変数が提供されない限り、
// 型チェッカーはこの型の値を構築しませんでした。
// go1.23以降、この変数はデフォルトで有効になっています。
// この設定により、事前宣言された型「any」も
// 生の [Interface] ではなくAliasとして表現されます。
type Alias struct {
	obj     *TypeName
	orig    *Alias
	tparams *TypeParamList
	targs   *TypeList
	fromRHS Type
	actual  Type
}

// NewAliasは、指定された型名とrhsを持つ新しいAlias型を作成します。
// rhsはnilであってはなりません。
func NewAlias(obj *TypeName, rhs Type) *Alias

// Obj returns the type name for the declaration defining the alias type a.
// For instantiated types, this is same as the type name of the origin type.
func (a *Alias) Obj() *TypeName

func (a *Alias) String() string

// Underlyingは、エイリアス型aの [underlying type] を返します。これはエイリアスされた型の基底型です。
// 基底型は、Named、TypeParam、Alias型ではありません。
//
// [underlying type]: https://go.dev/ref/spec#Underlying_types.
func (a *Alias) Underlying() Type

// Originは、aがインスタンスであるジェネリックエイリアス型を返します。
// もしaがジェネリックエイリアスのインスタンスでない場合、Originはaを返します。
func (a *Alias) Origin() *Alias

// TypeParamsは、エイリアス型aの型パラメータを返します。またはnilを返します。
// ジェネリックエイリアスとそのインスタンスは、同じ型パラメータを持ちます。
func (a *Alias) TypeParams() *TypeParamList

// SetTypeParamsは、エイリアス型aの型パラメータを設定します。
// エイリアスaは、型引数を持っていてはいけません。
func (a *Alias) SetTypeParams(tparams []*TypeParam)

// TypeArgsは、エイリアス型をインスタンス化するために使用された型引数を返します。
// もしaがジェネリックエイリアスのインスタンスでない場合、結果はnilです。
func (a *Alias) TypeArgs() *TypeList

// Rhsは、エイリアス宣言 "type A = R" の右辺にある型Rを返します。
// これは別のエイリアスかもしれません。
func (a *Alias) Rhs() Type

// Unaliasは、tがエイリアス型でない場合はtを返し、
// それ以外の場合はtのエイリアスチェーンを追跡して
// エイリアスでない型に到達すると、その型を返します。
// その結果、返される結果は決してエイリアス型ではありません。
func Unalias(t Type) Type
